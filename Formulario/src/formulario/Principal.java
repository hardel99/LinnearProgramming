/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formulario;

import Estructuras.NuevaLista;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
/**
 *
 * @author Rosalio Monterrosa
 */
public class Principal extends javax.swing.JFrame {

    private ArrayList<Restricciones> restriccion = new ArrayList();
    private String funcion;
    private float valores[] = new float[30];
    private int contador = 0;
    private char ar='a',sa='s' ,aux='s';
    private Simplex simplex;
    private final List<NuevaLista> standarizedEquations = new ArrayList<>();
    
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFuncion = new javax.swing.JTextField();
        btnGo = new javax.swing.JButton();
        txtW = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtX = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtY = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtN = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        listDiscriminante = new javax.swing.JComboBox<>();
        lista = new java.awt.List();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("PROGRAMACION LINEAL");

        jLabel2.setText("Funcion Z:");

        btnGo.setText("A darle!");
        btnGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoActionPerformed(evt);
            }
        });

        jLabel3.setText("W +");

        txtX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtXActionPerformed(evt);
            }
        });

        jLabel4.setText("X +");

        jLabel5.setText("Y");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel6.setText("Restricciones");

        listDiscriminante.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=", "<=", ">=" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtFuncion, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(191, 191, 191)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(txtW, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtX, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtY, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(listDiscriminante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtN, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(btnAgregar)))
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnGo)
                                .addGap(0, 429, Short.MAX_VALUE))
                            .addComponent(lista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtFuncion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listDiscriminante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(lista, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGo)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        contador++;
        Restricciones restri = new Restricciones();
        NuevaLista nueva = new NuevaLista();
        /*Agrega 0 en vacios*/
        if(txtN.getText().length()<=0){
            txtN.setText(JOptionPane.showInputDialog("Ingrese un numero"));
        }
        if(txtW.getText().length()<=0){
            txtW.setText("0");
        }
        if(txtX.getText().length()<=0){
            txtX.setText("0");
        }
        if(txtY.getText().length()<=0){
            txtY.setText("0");
        }
        /*Agrega 0 en vacios*/
        if(contador>1){
            ar = 's';
            sa = 'a';
            aux = 's';
            if(contador>2){
               ar = 's';
               sa = 's';
               aux = 'a';
            }
        }
        
        restri.setW(Integer.parseInt(txtW.getText()));
        restri.setX(Integer.parseInt(txtX.getText()));
        restri.setY(Integer.parseInt(txtY.getText()));
        restri.setDiscriminante(String.valueOf(listDiscriminante.getSelectedItem()));
        restri.setN(Integer.parseInt(txtN.getText()));

        lista.addItem(restri.toString());
        restriccion.add(restri);
        if(String.valueOf(listDiscriminante.getSelectedItem()).equals(">=")){
            ar='n';
            System.out.println("Mayor");
        }
        
        nueva.addNodeS(Float.parseFloat(txtW.getText()), 's');
        nueva.addNodeS(Float.parseFloat(txtX.getText()), 's');
        nueva.addNodeS(Float.parseFloat(txtY.getText()), 's');
        nueva.addNodeS(0, ar); // variable 0 holgura 
        nueva.addNodeS(0, sa); // variable s artificial 
        nueva.addNodeS(0, aux); // variable s artificial 
        nueva.addNodeS(Integer.parseInt(txtN.getText()), 's');
        
        System.out.println("Condicion " + (contador) + String.valueOf(listDiscriminante.getSelectedItem()));
        
        nueva.showList(nueva);
        
        standarizedEquations.add(nueva);
        
        valores[0+contador] = nueva.getElementAt(0);//Guarda el 1 coeficiente de la 1 condicion 
        valores[1+contador] = nueva.getElementAt(1);/////////////////////////de la 2 condicion 
        valores[2+contador] = nueva.getElementAt(2);
        valores[3+contador] = nueva.getElementAt(5);
        
        /*Limpia los cuadros*/
        txtW.setText("");
        txtX.setText("");
        txtY.setText("");
        txtN.setText("");
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void txtXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtXActionPerformed

    private void btnGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoActionPerformed
        // TODO add your handling code here:
        if(txtFuncion.getText().length()<=0){
            JOptionPane.showMessageDialog(null, "Ingrese una funcion valida");
        } else if(restriccion.isEmpty()==true){
            JOptionPane.showMessageDialog(null, "Ingrese una restriccion");
        } else{
            funcion = txtFuncion.getText();
            
            NuevaLista zeta = new NuevaLista();
            List<Float> ec = fromString("3x + 5y");
            for(int i = 0; i < ec.size(); i++) {
                zeta.addNodeZ(ec.get(i));
            }

            System.out.println("Funcion Z Valores:");
            zeta.showList(zeta);
            standarizedEquations.add(zeta);
            
            //simplex time
            solve();
            float[][] result = simplex.getTable();
            float w = result[0][result[0].length - 1];
            float x = result[1][result[1].length - 1];
            float y = result[2][result[2].length - 1];
            float z = result[3][result[3].length - 1];
            
            /*Aqui mostramos la solucion*/
            Solucion solucion = new Solucion();
            solucion.setVisible(true);
            solucion.setTxtW("" + w);
            solucion.setTxtX("" + x);
            solucion.setTxtY("" + y);
            solucion.setTxtZ("" + z);
        }
    }//GEN-LAST:event_btnGoActionPerformed
    
    public List<Float> fromString(String eq) {
        List<Float> single = new ArrayList();
        
        eq = eq.replaceAll("\\s+", "");
        String[] terminos = eq.split("(?=[+-])|=");
        for(String s: terminos) {
            Pattern p = Pattern.compile("\\p{Alpha}");
            Matcher m = p.matcher(s);
            if(m.find()) {
                String coef = s.substring(0, m.start());
                float cof = Float.parseFloat(coef);
                single.add(cof);
                
                System.out.println(cof);
            } else{
                //a lo que esta igualado la funcion(si es que esta igualada a algo)
                single.add(Float.parseFloat(s));
                
                System.out.println(s);
            }
        }
        
        return single;
    }
    
    private void solve() {
        boolean quit = false;
        int rows = standarizedEquations.size();
        int columns = standarizedEquations.get(0).getSize();
        int count = 0;
        
        float[][] standarized = new float[rows][columns];
        
        //filling the matrix
        for(NuevaLista nl : standarizedEquations) {
            for(int j = 0; j < nl.getSize(); j++) {
                standarized[count][j] = nl.getElementAt(j);
            }
            
            count++;
        }
        
        /*2 variables
          4 valores desconocidos*/
        simplex = new Simplex(rows - 1, columns - 1);   //Less 1 cause the Z function and the result values doesn't count
        
        simplex.fillTable(standarized);
        simplex.print();
        //Para debugging
        //Imprimir Matriz
        /*System.out.println("---Inicializando---");
        simplex.print();*/
        
        //Si la Matriz(tabla simplex) no es optima iterar hasta llegar a una solucion
        while(!quit){
            Simplex.ERROR err = simplex.compute();
            
            //se encontro la mejor solucion
            if(err == Simplex.ERROR.IS_OPTIMAL) {
                simplex.print();
                quit = true;
            } else if(err == Simplex.ERROR.UNBOUNDED) {
                //el problema no se puede solucionar por simplex
                System.out.println("---Solution Ambigua---");
                quit = true;
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnGo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    public static javax.swing.JComboBox<String> listDiscriminante;
    private java.awt.List lista;
    private javax.swing.JTextField txtFuncion;
    public static javax.swing.JTextField txtN;
    public static javax.swing.JTextField txtW;
    public static javax.swing.JTextField txtX;
    public static javax.swing.JTextField txtY;
    // End of variables declaration//GEN-END:variables
}
